#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
struct nodo{
	int numero;
	struct nodo *siguiente;
};
struct nodo *primero, *ultimo; //definir el primer y ultimo elemento de la lista es decir el que va a ir a ese lugar.
   void mostrar_menu();
   void aniadirElemento();
   void mostrarLista();
int main(void){
	int opcion=0;
	primero=(struct nodo*)NULL; //primer elemento de la lista
	ultimo=(struct nodo*)NULL;  //ultimo elemento de la lista
	
	//PARAinsertr un nodo despues del nodo p
	//q->sig= p->sig
	//p->sig=q
		
	do{
		mostrar_menu();
		scanf("%d",&opcion);
		switch(opcion){
			case 1: aniadirElemento();
			break;
			case 2: printf("Ingrese numero a borrar \n");
			break;
			case 3: mostrarLista(primero);
			break;
			case 4: exit(1);
			default: printf("Opcion no valida\n");
		}
	}while(opcion!=4);
	
	getchar(); getchar();
	return 0;
}
 void mostrar_menu(){
      printf("\n\n\nMenu:\n=====\n\n");
      printf("1.- Anadir elementos\n");
      printf("2.- Borrar elementos\n");
      printf("3.- Mostrar lista\n");
      printf("4.- Salir\n\n");
      printf("Escoge una opcion: ");fflush(stdout);
 }
 void aniadirElemento(){
	struct nodo *nuevo;
	//Reservamos memoria para el nuevo elemento
	nuevo = (struct nodo*)malloc (sizeof(struct nodo*));
	if(nuevo==NULL) printf ("No hay memoria disponible\n");
	printf("\nNuevo elemento:\n");
	printf("Numero: ");
    fflush(stdout);
    scanf("%d",&nuevo->numero); //gets(nuevo->numero);
    //El campo siguiente va a ser null por ser el ultimo elemento de la lista
    nuevo->siguiente =NULL;
    //ahora metemos el nuevo elemento en la lista y lo situamos al final de la lista
    //comprobamos s i la lista esta vacia, si primero==null es que no hay ningun elemento
    //tambien vale ultimo==null;
    if(primero==NULL){
    	printf("Primer elemeto\n");
    	primero= nuevo;
    	ultimo=nuevo;
    }else{
    	//el que esta ahora era el ultimo y tiene que apuntar al nuevo
    	ultimo->siguiente=nuevo;
    	//hacemos que el nuevo sea ahora el ultimo
    	ultimo = nuevo;
	}
    }
        void mostrarLista(){
    	struct nodo *auxiliar; // lo usamos para recorrer la lista
    	int i=0;
    	auxiliar= primero;
    	printf("\nMostrando la lista completa:\n");
    	while(auxiliar!=NULL){
    		printf("Numero: %d \n",auxiliar->numero);
    		auxiliar= auxiliar->siguiente;
    		i++;
    	}
    	if(i==0) printf("\nLa lista esta vacia\n");
        }
        //insertar elemento al inicio  p->siguiente=inicio;  inicio=p;
        
